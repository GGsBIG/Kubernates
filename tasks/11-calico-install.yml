---
# 部署 Calico CNI 網絡插件使用 Tigera Operator (僅在第一個 master 節點執行)

# 步驟 1: 安裝 Tigera Operator 和 CRDs
- name: Install Tigera Operator CRDs
  shell: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/operator-crds.yaml --kubeconfig=/root/.kube/config
  when: inventory_hostname == groups['masters'][0]
  register: operator_crds_result
  ignore_errors: yes

- name: Install Tigera Operator
  shell: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/tigera-operator.yaml --kubeconfig=/root/.kube/config
  when: inventory_hostname == groups['masters'][0]
  register: tigera_operator_result
  ignore_errors: yes

- name: Display Tigera Operator installation result
  debug:
    msg: |
      CRDs result: {{ operator_crds_result.stdout if operator_crds_result.stdout else operator_crds_result.stderr }}
      Operator result: {{ tigera_operator_result.stdout if tigera_operator_result.stdout else tigera_operator_result.stderr }}
  when: inventory_hostname == groups['masters'][0]

# 步驟 2: 下載並自定義 custom resources
- name: Download Calico custom resources
  get_url:
    url: "https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/custom-resources.yaml"
    dest: /tmp/custom-resources.yaml
    mode: '0644'
  when: inventory_hostname == groups['masters'][0]

- name: Customize Calico CIDR in custom resources
  replace:
    path: /tmp/custom-resources.yaml
    regexp: '192\.168\.0\.0/16'
    replace: '{{ pod_network_cidr }}'
  when: inventory_hostname == groups['masters'][0]

# 步驟 3: 創建 Calico 安裝 manifest
- name: Create Calico installation manifest
  shell: kubectl create -f /tmp/custom-resources.yaml --kubeconfig=/root/.kube/config
  when: inventory_hostname == groups['masters'][0]
  register: calico_install_result
  ignore_errors: yes

- name: Display Calico installation result
  debug:
    var: calico_install_result.stdout_lines
  when: inventory_hostname == groups['masters'][0]

# 步驟 4: 等待 Tigera Operator 就緒
- name: Wait for Tigera Operator to be ready
  shell: kubectl rollout status deployment/tigera-operator -n tigera-operator --timeout=300s --kubeconfig=/root/.kube/config
  when: inventory_hostname == groups['masters'][0]
  register: operator_ready
  ignore_errors: yes

# 步驟 5: 驗證 Calico 安裝
- name: Wait for Calico system pods to be ready
  shell: kubectl get pods -n calico-system --kubeconfig=/root/.kube/config
  register: calico_system_pods
  when: inventory_hostname == groups['masters'][0]
  until: calico_system_pods.stdout.find("Running") != -1
  retries: 30
  delay: 10
  ignore_errors: yes

- name: Display Calico system pods status
  debug:
    var: calico_system_pods.stdout_lines
  when: inventory_hostname == groups['masters'][0]

- name: Wait for Calico node pods in kube-system
  shell: kubectl get pods -n kube-system | grep calico-node --kubeconfig=/root/.kube/config
  register: calico_nodes
  when: inventory_hostname == groups['masters'][0]
  until: calico_nodes.stdout.find("Running") != -1
  retries: 30
  delay: 10
  ignore_errors: yes

- name: Display Calico node pods status
  debug:
    var: calico_nodes.stdout_lines
  when: inventory_hostname == groups['masters'][0]

- name: Wait for CoreDNS to be ready
  shell: kubectl rollout status deployment/coredns -n kube-system --timeout=300s --kubeconfig=/root/.kube/config
  when: inventory_hostname == groups['masters'][0]
  register: coredns_rollout
  ignore_errors: yes

- name: Verify all system pods are running
  shell: kubectl get pods -A --kubeconfig=/root/.kube/config
  register: all_pods
  when: inventory_hostname == groups['masters'][0]

- name: Display all pods status
  debug:
    var: all_pods.stdout_lines
  when: inventory_hostname == groups['masters'][0]

- name: Verify nodes are ready
  shell: kubectl get nodes --kubeconfig=/root/.kube/config
  register: nodes_status
  when: inventory_hostname == groups['masters'][0]

- name: Display nodes status
  debug:
    var: nodes_status.stdout_lines
  when: inventory_hostname == groups['masters'][0]

- name: Clean up downloaded files
  file:
    path: /tmp/custom-resources.yaml
    state: absent
  when: inventory_hostname == groups['masters'][0]