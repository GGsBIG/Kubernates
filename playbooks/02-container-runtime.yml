---
- name: Stage 2 - Container Runtime Setup
  hosts: k8s_cluster
  become: yes
  tasks:
    - name: Download containerd
      get_url:
        url: https://github.com/containerd/containerd/releases/download/v1.7.27/containerd-1.7.27-linux-amd64.tar.gz
        dest: /tmp/containerd-1.7.27-linux-amd64.tar.gz
        
    - name: Extract containerd
      unarchive:
        src: /tmp/containerd-1.7.27-linux-amd64.tar.gz
        dest: /usr/local
        remote_src: yes
        
    - name: Download containerd service file
      get_url:
        url: https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
        dest: /tmp/containerd.service
        
    - name: Create systemd directory
      file:
        path: /usr/local/lib/systemd/system
        state: directory
        
    - name: Install containerd service
      copy:
        src: /tmp/containerd.service
        dest: /usr/local/lib/systemd/system/containerd.service
        remote_src: yes
        
    - name: Enable and start containerd
      systemd:
        name: containerd
        enabled: yes
        state: started
        daemon_reload: yes
        
    - name: Download runc
      get_url:
        url: https://github.com/opencontainers/runc/releases/download/v1.3.0/runc.amd64
        dest: /tmp/runc.amd64
        mode: '0755'
        
    - name: Install runc
      copy:
        src: /tmp/runc.amd64
        dest: /usr/local/sbin/runc
        mode: '0755'
        remote_src: yes
        
    - name: Create CNI directory
      file:
        path: /opt/cni/bin
        state: directory
        
    - name: Download CNI plugins
      shell: |
        curl -sL "$(curl -sL https://api.github.com/repos/containernetworking/plugins/releases/latest | \
        jq -r '.assets[].browser_download_url' | grep 'linux-amd64.*tgz')" -o /tmp/cni-plugins.tgz
        
    - name: Extract CNI plugins
      unarchive:
        src: /tmp/cni-plugins.tgz
        dest: /opt/cni/bin
        remote_src: yes
        
    - name: Create containerd config directory
      file:
        path: /etc/containerd
        state: directory
        
    - name: Generate containerd config
      shell: containerd config default > /etc/containerd/config.toml
      
    - name: Configure containerd systemd cgroup
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'
        
    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted
        
    - name: Configure crictl
      copy:
        content: |
          runtime-endpoint: unix:///run/containerd/containerd.sock
          image-endpoint: unix:///run/containerd/containerd.sock
          timeout: 10
        dest: /etc/crictl.yaml